[tool.poetry]
authors = ["Ryan Bartling <ryan.bartling@gmail.com>"]
description = "Generate structured code for APIs and documentation"
include = ["README.md", "pyproject.toml"]
name = "struct_writer"
readme = "README.md"
repository = "https://github.com/drbartling/struct-writer"
version = "0.5.5"

[tool.poetry.scripts]
struct-writer = "struct_writer.generate_structured_code:main"

[tool.poetry.dependencies]
python = "^3.11,<3.14"
click = "^8.2.0"
pyyaml = "^6.0.2"
rich = "^14.0.0"
pydantic = "^2.11.4"

[tool.poetry.group.dev.dependencies]
coverage = "^7.8.0"
devtools = "^0.12.2"
isort = "^6.0.1"
pre-commit = "^4.2.0"
pytest = "^8.3.5"
pytest-cov = "^6.1.1"
ruff = "^0.11.12"

[tool.coverage.paths]
source = ["src"]

[tool.coverage.report]
precision = 2
show_missing = true

[tool.coverage.run]
branch = true
parallel = true
source = ["struct_writer"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 80

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.isort]
line_length = 80
profile = "black"

[tool.pytest.ini_options]
addopts = [
    "-q",
    "--cov-report=term-missing:skip-covered",
    "--cov",
    "--durations=5",
    "--ignore=acceptance_test",
]
testpaths = ["tests"]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
